[project]
name = "DAO-voting"
description = "Comprehensive DAO system with modular architecture following diamond pattern"
authors = []
telemetry = false
cache_dir = "./.cache"

[contracts.DaoToken]
path = "contracts/dao/DaoToken.clar"
epoch = "latest"

[contracts.Governed]
path = "contracts/dao/Governed.clar"
epoch = "latest"

[contracts.Treasury]
path = "contracts/dao/Treasury.clar"
epoch = "latest"

[contracts.ProposalExecutor]
path = "contracts/dao/ProposalExecutor.clar"
epoch = "latest"

[contracts.VotingStrategy]
path = "contracts/dao/VotingStrategy.clar"
epoch = "latest"

[contracts.DaoFactory]
path = "contracts/dao/DaoFactory.clar"
epoch = "latest"

[contracts.AccessControl]
path = "contracts/dao/AccessControl.clar"
epoch = "latest"

[contracts.Timelock]
path = "contracts/dao/Timelock.clar"
epoch = "latest"

[contracts.Multisig]
path = "contracts/dao/Multisig.clar"
epoch = "latest"

[contracts.Events]
path = "contracts/dao/Events.clar"
epoch = "latest"

[contracts.DaoIntegration]
path = "contracts/dao/DaoIntegration.clar"
epoch = "latest"

[repl.analysis]
passes = ["check_checker"]
check_checker = { trusted_sender = false, trusted_caller = false, callee_filter = false }

# Check-checker settings:
# trusted_sender: if true, inputs are trusted after tx_sender has been checked.
# trusted_caller: if true, inputs are trusted after contract-caller has been checked.
# callee_filter: if true, untrusted data may be passed into a private function without a
# warning, if it gets checked inside. This check will also propagate up to the
# caller.
# More informations: https://www.hiro.so/blog/new-safety-checks-in-clarinet
